{"version":3,"sources":["components/Nav.tsx","components/PlayersList.tsx","redux/actions/actionTypes.ts","components/PlayerForm.tsx","helpers/fns.tsx","redux/actions/playerActions.ts","components/PlayersPage.tsx","components/TeamsList.tsx","redux/actions/teamActions.ts","components/TeamForm.tsx","components/TeamsPage.tsx","App.tsx","reportWebVitals.ts","redux/reducers/initialState.ts","redux/reducers/index.ts","redux/reducers/playerReducers.ts","redux/reducers/teamReducers.ts","index.tsx","redux/configureStore.js"],"names":["navAddresses","label","route","Nav","AppBar","position","Toolbar","variant","ButtonGroup","color","aria-label","map","ad","Button","InputLabel","to","useStyles","makeStyles","theme","root","width","maxWidth","backgroundColor","palette","background","paper","PlayersList","players","useSelector","state","playersData","classes","className","List","Divider","player","ListItem","button","ListItemText","name","lastname","age","format","dateofbirth","id","CREATE_PLAYER_SUCCESS","CREATE_TEAM_SUCCESS","ADD_PLAYER_TO_TEAM","DELETE_PLAYER_FROM_TEAM","PlayerForm","dispatch","useDispatch","useState","Date","setPlayer","handleChange","event","target","value","FormGroup","FormControl","Input","aria-describedby","onChange","selected","date","newAge","birthday","ageDifMs","now","getTime","ageDate","Math","abs","getUTCFullYear","calculateAge","alert","FormHelperText","onClick","newId","nextId","newPlayer","type","types","playerActions","PlayersPage","activeForm","setActiveForm","TeamsList","teams","teamsData","handleSelectorChange","playerToAddId","teamIdToAdd","filteredTeams","filter","t","filteredPlayers","p","length","team","newTeamPlayersExtra","newTeamPlayersDeleted","newTeamWithExtraPlayer","numberOfPlayers","newTeamWithPlayerDeleted","addPlayerToTeam","teamActions","stadium","Select","MenuItem","style","TeamForm","setTeam","validTeam","newTeam","forEach","TeamsPage","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","initialState","action","store","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","reduxImmutableStateInvariant","configureStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b17a089c.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport { Button, InputLabel } from '@material-ui/core';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\n\r\nconst navAddresses = [\r\n  { label: 'Players', route: '/players' },\r\n  { label: 'Teams', route: '/teams' },\r\n];\r\n\r\nexport default function Nav() {\r\n  return (\r\n    <>\r\n      <AppBar position=\"static\">\r\n        <Toolbar variant=\"dense\">\r\n          <ButtonGroup\r\n            color=\"secondary\"\r\n            aria-label=\"outlined primary button group\"\r\n          >\r\n            {navAddresses.map((ad) => (\r\n              <Button key={ad.label}>\r\n                <InputLabel>\r\n                  <Link to={ad.route}>{ad.label}</Link>\r\n                </InputLabel>\r\n              </Button>\r\n            ))}\r\n          </ButtonGroup>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { useSelector } from 'react-redux';\r\nimport { format } from 'date-fns';\r\nimport { Player } from '../helpers/interfaces';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nexport default function PlayersList() {\r\n  const players: Player[] = useSelector(\r\n    (state: { playersData: { players: Player[] } }) => state.playersData.players\r\n  );\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      PLAYERS LIST\r\n      <List>\r\n        <Divider />\r\n        {players.map((player: Player) => {\r\n          return (\r\n            <>\r\n              <ListItem button key={player.id}>\r\n                <ListItemText>\r\n                  {player.name} {player.lastname} | {player.age} |{' '}\r\n                  {format(player.dateofbirth, 'MM/dd/yyyy')} |\r\n                </ListItemText>\r\n              </ListItem>\r\n              <Divider />\r\n            </>\r\n          );\r\n        })}\r\n      </List>\r\n    </div>\r\n  );\r\n}\r\n","export const CREATE_PLAYER_SUCCESS = 'CREATE_PLAYER_SUCCESS';\r\nexport const CREATE_TEAM_SUCCESS = 'CREATE_TEAM_SUCCESS';\r\nexport const ADD_PLAYER_TO_TEAM = 'ADD_PLAYER_TO_TEAM';\r\nexport const DELETE_PLAYER_FROM_TEAM = 'DELETE_PLAYER_FROM_TEAM';\r\n","import React, { useState } from 'react';\r\nimport nextId from 'react-id-generator';\r\nimport * as playerActions from '../redux/actions/playerActions';\r\nimport {\r\n  FormControl,\r\n  FormHelperText,\r\n  Input,\r\n  InputLabel,\r\n  FormGroup,\r\n  Button,\r\n} from '@material-ui/core';\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport { useDispatch } from 'react-redux';\r\nimport { calculateAge } from '../helpers/fns';\r\nimport { Player } from '../helpers/interfaces';\r\n\r\nexport default function PlayerForm() {\r\n  const dispatch = useDispatch();\r\n  const [player, setPlayer] = useState<Player>({\r\n    id: '',\r\n    name: '',\r\n    lastname: '',\r\n    age: 21,\r\n    dateofbirth: new Date(1999, 6, 16),\r\n  });\r\n\r\n  const resetPlayer = (player: Player) => {\r\n    setPlayer({\r\n      id: '',\r\n      name: '',\r\n      lastname: '',\r\n      age: 21,\r\n      dateofbirth: new Date(1999, 6, 16),\r\n    });\r\n  };\r\n\r\n  const handleChange = (event: { target: { name: string; value: string } }) =>\r\n    setPlayer({ ...player, [event.target.name]: event.target.value });\r\n  function handleDateChange(date: Date) {\r\n    const newAge = calculateAge(date);\r\n    if (newAge < 18) {\r\n      alert('Invalid Date, player age must be > than 18');\r\n      return;\r\n    }\r\n    setPlayer({ ...player, dateofbirth: date, age: newAge });\r\n  }\r\n\r\n  const addPlayer = () => {\r\n    const newId = nextId('test-id-');\r\n    const newPlayer = { ...player, id: newId };\r\n    if (!newPlayer.name) return alert('Player name is required');\r\n    if (!newPlayer.lastname) return alert('Player lastname is required');\r\n    dispatch(playerActions.createPlayerSuccess(newPlayer));\r\n    resetPlayer(player);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <FormGroup id=\"team-form\">\r\n        <FormControl>\r\n          <InputLabel>Name</InputLabel>\r\n          <Input\r\n            value={player.name}\r\n            name=\"name\"\r\n            aria-describedby=\"my-helper-text\"\r\n            onChange={handleChange}\r\n          />\r\n        </FormControl>\r\n        <FormControl>\r\n          <InputLabel>Last Name</InputLabel>\r\n          <Input\r\n            value={player.lastname}\r\n            name=\"lastname\"\r\n            aria-describedby=\"my-helper-text\"\r\n            onChange={handleChange}\r\n          />\r\n        </FormControl>\r\n        <FormControl>\r\n          <InputLabel>Date of Birth</InputLabel>\r\n          <DatePicker\r\n            selected={player.dateofbirth}\r\n            onChange={handleDateChange}\r\n          />\r\n        </FormControl>\r\n        <FormControl></FormControl>\r\n        <FormControl>\r\n          <InputLabel>Age {player.age}</InputLabel>\r\n          <br />\r\n          <br />\r\n          <FormHelperText id=\"my-helper-text\">\r\n            Age must be higher or equal to 18\r\n          </FormHelperText>\r\n        </FormControl>\r\n      </FormGroup>\r\n      <Button color=\"secondary\" onClick={addPlayer} variant=\"outlined\">\r\n        <InputLabel>Add New Player</InputLabel>\r\n      </Button>\r\n    </>\r\n  );\r\n}\r\n","export function calculateAge(birthday: Date): number {\r\n  var ageDifMs = Date.now() - birthday.getTime();\r\n  var ageDate = new Date(ageDifMs);\r\n  return Math.abs(ageDate.getUTCFullYear() - 1970);\r\n}\r\n","import * as types from './actionTypes';\r\nimport { Player } from '../../helpers/interfaces';\r\n\r\nexport function createPlayerSuccess(player: Player) {\r\n  return { type: types.CREATE_PLAYER_SUCCESS, player };\r\n}\r\n","import React, { useState } from 'react';\r\nimport PlayersList from './PlayersList';\r\nimport PlayerForm from './PlayerForm';\r\nimport { Button, InputLabel } from '@material-ui/core';\r\n\r\nexport default function PlayersPage() {\r\n  const [activeForm, setActiveForm] = useState<boolean>(false);\r\n  return (\r\n    <>\r\n      <Button\r\n        variant=\"outlined\"\r\n        onClick={() => {\r\n          setActiveForm(!activeForm);\r\n        }}\r\n      >\r\n        <InputLabel>Player Form</InputLabel>\r\n      </Button>\r\n      {activeForm && <PlayerForm />}\r\n      <PlayersList />\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n  ListItem,\r\n  ListItemText,\r\n  Divider,\r\n  List,\r\n  MenuItem,\r\n  Select,\r\n} from '@material-ui/core';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { format } from 'date-fns';\r\nimport { Team, Player } from '../helpers/interfaces';\r\nimport * as teamActions from '../redux/actions/teamActions';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nexport default function TeamsList() {\r\n  const dispatch = useDispatch();\r\n  const teams: Team[] = useSelector(\r\n    (state: { teamsData: { teams: Team[] } }) => state.teamsData.teams\r\n  );\r\n  const players: Player[] = useSelector(\r\n    (state: { playersData: { players: Player[] } }) => state.playersData.players\r\n  );\r\n  const classes = useStyles();\r\n\r\n  const handleSelectorChange = (event: any) => {\r\n    const playerToAddId = event.target.value;\r\n    const teamIdToAdd = event.target.name;\r\n\r\n    const filteredTeams = teams.filter((t) => t.id === teamIdToAdd);\r\n    const filteredPlayers = players.filter((p) => p.id === playerToAddId);\r\n\r\n    if (filteredTeams.length > 0 && filteredPlayers.length > 0) {\r\n      const team = filteredTeams[0];\r\n      const player = filteredPlayers[0];\r\n      const newTeamPlayersExtra = [...team.players, player];\r\n      const newTeamPlayersDeleted = team.players.filter(\r\n        (p) => p.id !== player.id\r\n      );\r\n      const newTeamWithExtraPlayer = {\r\n        ...team,\r\n        players: newTeamPlayersExtra,\r\n        numberOfPlayers: team.numberOfPlayers + 1,\r\n      };\r\n      const newTeamWithPlayerDeleted = {\r\n        ...team,\r\n        players: newTeamPlayersDeleted,\r\n        numberOfPlayers: team.numberOfPlayers - 1,\r\n      };\r\n      // tenemos que checkear ahora si el player esta en el team de antes\r\n      const addPlayerToTeam =\r\n        team.players.filter((p: Player) => p.id === player.id).length > 0\r\n          ? false\r\n          : true;\r\n      addPlayerToTeam\r\n        ? dispatch(teamActions.addPlayerToTeam(newTeamWithExtraPlayer, player))\r\n        : dispatch(\r\n            teamActions.deletePlayerFromTeam(newTeamWithPlayerDeleted, player)\r\n          );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      TEAMS LIST\r\n      <List>\r\n        <Divider />\r\n        {teams.map((team: Team) => {\r\n          return (\r\n            <>\r\n              <ListItem button>\r\n                <ListItemText>\r\n                  {team.name} | {team.stadium} | Number of Players:{' '}\r\n                  {team.numberOfPlayers} |{' '}\r\n                  {format(team.dateofbirth, 'MM/dd/yyyy')} |\r\n                </ListItemText>\r\n                <Select\r\n                  name={team.id}\r\n                  value={players}\r\n                  onChange={handleSelectorChange}\r\n                >\r\n                  {players.map((player: Player) => {\r\n                    return team.players.filter(\r\n                      (p: Player) => p.id === player.id\r\n                    ).length > 0 ? (\r\n                      <MenuItem\r\n                        value={player.id}\r\n                        style={{ backgroundColor: '#b3fcbc' }}\r\n                      >\r\n                        {player.name} {player.lastname}\r\n                      </MenuItem>\r\n                    ) : (\r\n                      <MenuItem\r\n                        value={player.id}\r\n                        style={{ backgroundColor: '#ffabc2' }}\r\n                      >\r\n                        {player.name} {player.lastname}\r\n                      </MenuItem>\r\n                    );\r\n                  })}\r\n                </Select>\r\n              </ListItem>\r\n              <Divider />\r\n            </>\r\n          );\r\n        })}\r\n      </List>\r\n    </div>\r\n  );\r\n}\r\n","import * as types from './actionTypes';\r\nimport { Team, Player } from '../../helpers/interfaces';\r\n\r\nexport function createTeamSuccess(team: Team) {\r\n  return { type: types.CREATE_TEAM_SUCCESS, team };\r\n}\r\n\r\nexport function addPlayerToTeam(team: Team, player: Player) {\r\n  return { type: types.ADD_PLAYER_TO_TEAM, player, team };\r\n}\r\n\r\nexport function deletePlayerFromTeam(team: Team, player: Player) {\r\n  return { type: types.DELETE_PLAYER_FROM_TEAM, player, team };\r\n}\r\n","import React, { useState } from 'react';\r\nimport nextId from 'react-id-generator';\r\nimport * as teamActions from '../redux/actions/teamActions';\r\nimport {\r\n  FormControl,\r\n  Input,\r\n  InputLabel,\r\n  FormGroup,\r\n  Button,\r\n} from '@material-ui/core';\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Team } from '../helpers/interfaces';\r\n\r\nexport default function TeamForm() {\r\n  const dispatch = useDispatch();\r\n  const [team, setTeam] = useState<Team>({\r\n    id: '',\r\n    name: '',\r\n    stadium: '',\r\n    players: [],\r\n    dateofbirth: new Date(1891, 6, 16),\r\n    numberOfPlayers: 0,\r\n  });\r\n\r\n  const teams: Team[] = useSelector(\r\n    (state: { teamsData: { teams: Team[] } }) => state.teamsData.teams\r\n  );\r\n\r\n  const resetTeam = (team: Team) => {\r\n    setTeam({\r\n      id: '',\r\n      name: '',\r\n      stadium: '',\r\n      players: [],\r\n      dateofbirth: new Date(1891, 6, 16),\r\n      numberOfPlayers: 0,\r\n    });\r\n  };\r\n\r\n  const handleChange = (event: { target: { name: string; value: string } }) => {\r\n    setTeam({ ...team, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  function handleDateChange(date: Date) {\r\n    setTeam({ ...team, dateofbirth: date });\r\n  }\r\n\r\n  const addTeam = () => {\r\n    const newId = nextId('test-id-');\r\n    let validTeam = true;\r\n    const newTeam = { ...team, id: newId };\r\n    teams.forEach((team) => {\r\n      if (team.stadium === newTeam.stadium) validTeam = false;\r\n    });\r\n    if (!validTeam) {\r\n      alert('Invalid Team, stadium name already exists');\r\n      return;\r\n    }\r\n    if (!newTeam.name) return alert('Team name is required');\r\n    if (!newTeam.stadium) return alert('Team stadium is required');\r\n    dispatch(teamActions.createTeamSuccess(newTeam));\r\n    resetTeam(team);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <FormGroup>\r\n        <FormControl>\r\n          <InputLabel>Name</InputLabel>\r\n          <Input\r\n            value={team.name}\r\n            name=\"name\"\r\n            aria-describedby=\"my-helper-text\"\r\n            onChange={handleChange}\r\n          />\r\n        </FormControl>\r\n        <FormControl>\r\n          <InputLabel>Stadium</InputLabel>\r\n          <Input\r\n            value={team.stadium}\r\n            name=\"stadium\"\r\n            aria-describedby=\"my-helper-text\"\r\n            onChange={handleChange}\r\n          />\r\n        </FormControl>\r\n        <FormControl>\r\n          <InputLabel>Date of Fundation</InputLabel>\r\n          <DatePicker selected={team.dateofbirth} onChange={handleDateChange} />\r\n        </FormControl>\r\n        <br />\r\n      </FormGroup>\r\n      <Button color=\"secondary\" onClick={addTeam} variant=\"outlined\">\r\n        <InputLabel>Add New Team</InputLabel>\r\n      </Button>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport TeamsList from './TeamsList';\r\nimport TeamForm from './TeamForm';\r\nimport { Button, InputLabel } from '@material-ui/core';\r\n\r\nexport default function TeamsPage() {\r\n  const [activeForm, setActiveForm] = useState<boolean>(false);\r\n  return (\r\n    <>\r\n      <Button\r\n        variant=\"outlined\"\r\n        onClick={() => {\r\n          setActiveForm(!activeForm);\r\n        }}\r\n      >\r\n        <InputLabel>Team Form</InputLabel>\r\n      </Button>\r\n      {activeForm && <TeamForm />}\r\n      <TeamsList />\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from 'react-router-dom';\nimport Nav from './components/Nav';\nimport PlayersPage from './components/PlayersPage';\nimport TeamsPage from './components/TeamsPage';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Nav />\n        <Switch>\n          <Route path=\"/players\">\n            <PlayersPage />\n          </Route>\n          <Route path=\"/teams\">\n            <TeamsPage />\n          </Route>\n          <Route path=\"*\">\n            <Redirect to=\"/players\" />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {\r\n  playersData: {\r\n    players: [\r\n      {\r\n        id: '1',\r\n        name: 'Jope',\r\n        lastname: 'Algorta',\r\n        age: 21,\r\n        dateofbirth: new Date(1999, 6, 16),\r\n      },\r\n      {\r\n        id: '2',\r\n        name: 'Juan',\r\n        lastname: 'Perez',\r\n        age: 22,\r\n        dateofbirth: new Date(1998, 6, 16),\r\n      },\r\n      {\r\n        id: '3',\r\n        name: 'Joaquin',\r\n        lastname: 'Fernandez',\r\n        age: 21,\r\n        dateofbirth: new Date(1999, 6, 16),\r\n      },\r\n    ],\r\n  },\r\n  teamsData: {\r\n    teams: [\r\n      {\r\n        id: '1',\r\n        name: 'Manya',\r\n        stadium: 'CDS',\r\n        dateofbirth: new Date(1891, 8, 16),\r\n        players: [\r\n          {\r\n            id: '1',\r\n            name: 'Jope',\r\n            lastname: 'Algorta',\r\n            age: 21,\r\n            dateofbirth: new Date(1999, 6, 16),\r\n          },\r\n        ],\r\n        numberOfPlayers: 1,\r\n      },\r\n      {\r\n        id: '2',\r\n        name: 'Nacional',\r\n        stadium: 'GPC',\r\n        dateofbirth: new Date(1910, 8, 16),\r\n        players: [],\r\n        numberOfPlayers: 0,\r\n      },\r\n    ],\r\n  },\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport playersData from './playerReducers';\r\nimport teamsData from './teamReducers';\r\nconst rootReducer = combineReducers({\r\n  playersData,\r\n  teamsData,\r\n});\r\n\r\nexport default rootReducer;\r\n","import * as types from '../actions/actionTypes';\r\nimport initialState from './initialState';\r\nimport { Player } from '../../helpers/interfaces';\r\n\r\nexport default function playerReducer(\r\n  state = initialState.playersData,\r\n  action: { type: string; player: Player }\r\n): {} {\r\n  switch (action.type) {\r\n    case types.CREATE_PLAYER_SUCCESS:\r\n      return { ...state, players: [...state.players, action.player] };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import * as types from '../actions/actionTypes';\r\nimport initialState from './initialState';\r\nimport { Team, Player } from '../../helpers/interfaces';\r\n\r\nexport default function teamReducer(\r\n  state = initialState.teamsData,\r\n  action: { type: string; team: Team; player?: Player }\r\n): {} {\r\n  switch (action.type) {\r\n    case types.CREATE_TEAM_SUCCESS:\r\n      return { ...state, teams: [...state.teams, action.team] };\r\n    case types.ADD_PLAYER_TO_TEAM:\r\n      return {\r\n        ...state,\r\n        teams: state.teams.map((team) =>\r\n          team.id === action.team.id ? action.team : team\r\n        ),\r\n      };\r\n    case types.DELETE_PLAYER_FROM_TEAM:\r\n      return {\r\n        ...state,\r\n        teams: state.teams.map((team) =>\r\n          team.id === action.team.id ? action.team : team\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport configureStore from './redux/configureStore';\nimport initialState from './redux/reducers/initialState';\n\nconst store = configureStore(initialState);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport rootReducer from './reducers';\r\nimport reduxImmutableStateInvariant from 'redux-immutable-state-invariant';\r\n\r\nexport default function configureStore(initialState) {\r\n  const composeEnhancers =\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose; // add support for Redux dev tools\r\n\r\n  return createStore(\r\n    rootReducer,\r\n    initialState,\r\n    composeEnhancers(applyMiddleware(reduxImmutableStateInvariant()))\r\n  );\r\n}\r\n"],"sourceRoot":""}