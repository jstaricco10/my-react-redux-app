{"version":3,"sources":["components/Nav.tsx","components/PlayersList.tsx","redux/actions/actionTypes.ts","components/PlayerForm.tsx","helpers/fns.tsx","redux/actions/playerActions.ts","components/PlayersPage.tsx","components/TeamsList.tsx","redux/actions/teamActions.ts","components/TeamForm.tsx","components/TeamsPage.tsx","App.tsx","reportWebVitals.ts","redux/reducers/initialState.ts","redux/reducers/index.ts","redux/reducers/playerReducers.ts","redux/reducers/teamReducers.ts","index.tsx","redux/configureStore.js"],"names":["navAddresses","label","route","Nav","AppBar","position","Toolbar","variant","ButtonGroup","color","aria-label","map","ad","Button","InputLabel","to","useStyles","makeStyles","theme","root","width","maxWidth","backgroundColor","palette","background","paper","PlayersList","players","useSelector","state","classes","className","List","Divider","player","ListItem","button","ListItemText","name","lastname","age","format","dateofbirth","id","CREATE_PLAYER_SUCCESS","CREATE_TEAM_SUCCESS","ADD_PLAYER_TO_TEAM","PlayerForm","dispatch","useDispatch","useState","Date","setPlayer","handleChange","event","target","value","FormGroup","FormControl","Input","aria-describedby","onChange","selected","date","console","log","newAge","birthday","ageDifMs","now","getTime","ageDate","Math","abs","getUTCFullYear","calculateAge","alert","FormHelperText","onClick","newId","nextId","newPlayer","type","types","playerActions","PlayersPage","activeForm","setActiveForm","TeamList","teams","handleSelectorChange","team","playerToAddId","teamIdToAdd","filteredTeams","filter","t","filteredPlayers","p","length","newTeamPlayers","newTeam","numberOfPlayers","stadium","Select","MenuItem","TeamForm","setTeam","validTeam","teamActions","TeamsPage","TeamsList","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","initialState","action","store","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","reduxImmutableStateInvariant","configureStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.44e30703.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport { Button, InputLabel } from '@material-ui/core';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\n\r\nconst navAddresses = [\r\n  { label: 'Players', route: '/players' },\r\n  { label: 'Teams', route: '/teams' },\r\n];\r\n\r\nexport default function Nav() {\r\n  return (\r\n    <>\r\n      <AppBar position=\"static\">\r\n        <Toolbar variant=\"dense\">\r\n          <ButtonGroup\r\n            color=\"secondary\"\r\n            aria-label=\"outlined primary button group\"\r\n          >\r\n            {navAddresses.map((ad) => (\r\n              <Button key={ad.label}>\r\n                <InputLabel>\r\n                  <Link to={ad.route}>{ad.label}</Link>\r\n                </InputLabel>\r\n              </Button>\r\n            ))}\r\n          </ButtonGroup>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { useSelector } from 'react-redux';\r\nimport { format } from 'date-fns';\r\nimport { Player } from '../helpers/interfaces';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nconst PlayersList: React.FC = () => {\r\n  const players: Player[] = useSelector(\r\n    (state: { players: Player[] }) => state.players\r\n  );\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      PLAYERS LIST\r\n      <List>\r\n        <Divider />\r\n        {players.map((player: Player) => {\r\n          return (\r\n            <>\r\n              <ListItem button key={player.id}>\r\n                <ListItemText>\r\n                  {player.name} {player.lastname} | {player.age} |{' '}\r\n                  {format(player.dateofbirth, 'MM/dd/yyyy')} |\r\n                </ListItemText>\r\n              </ListItem>\r\n              <Divider />\r\n            </>\r\n          );\r\n        })}\r\n      </List>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PlayersList;\r\n","export const CREATE_PLAYER_SUCCESS = 'CREATE_PLAYER_SUCCESS';\r\nexport const CREATE_TEAM_SUCCESS = 'CREATE_TEAM_SUCCESS';\r\nexport const ADD_PLAYER_TO_TEAM = 'ADD_PLAYER_TO_TEAM';\r\n","import React, { useState } from 'react';\r\nimport nextId from 'react-id-generator';\r\nimport * as playerActions from '../redux/actions/playerActions';\r\nimport {\r\n  FormControl,\r\n  FormHelperText,\r\n  Input,\r\n  InputLabel,\r\n  FormGroup,\r\n  Button,\r\n} from '@material-ui/core';\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport { useDispatch } from 'react-redux';\r\nimport { calculateAge } from '../helpers/fns';\r\n\r\nexport default function PlayerForm() {\r\n  const dispatch = useDispatch();\r\n  const [player, setPlayer] = useState({\r\n    id: '',\r\n    name: '',\r\n    lastname: '',\r\n    age: 21,\r\n    dateofbirth: new Date(1999, 6, 16),\r\n  });\r\n\r\n  const handleChange = (event: any) =>\r\n    setPlayer({ ...player, [event.target.name]: event.target.value });\r\n  function handleDateChange(date: Date) {\r\n    console.log(date);\r\n    const newAge = calculateAge(date);\r\n    if (newAge < 18) {\r\n      alert('Invalid Date, player age must be > than 18');\r\n      return;\r\n    }\r\n    setPlayer({ ...player, dateofbirth: date, age: newAge });\r\n  }\r\n\r\n  const addPlayer = () => {\r\n    const newId = nextId('test-id-');\r\n    const newPlayer = { ...player, id: newId };\r\n    if (!newPlayer.name) return alert('Player name is required');\r\n    if (!newPlayer.lastname) return alert('Player lastname is required');\r\n    dispatch(playerActions.createPlayerSuccess(newPlayer));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <FormGroup>\r\n        <FormControl>\r\n          <InputLabel>Name</InputLabel>\r\n          <Input\r\n            name=\"name\"\r\n            aria-describedby=\"my-helper-text\"\r\n            onChange={handleChange}\r\n          />\r\n        </FormControl>\r\n        <FormControl>\r\n          <InputLabel>Last Name</InputLabel>\r\n          <Input\r\n            name=\"lastname\"\r\n            aria-describedby=\"my-helper-text\"\r\n            onChange={handleChange}\r\n          />\r\n        </FormControl>\r\n        <FormControl>\r\n          <InputLabel>Date of Birth</InputLabel>\r\n          <DatePicker\r\n            selected={player.dateofbirth}\r\n            onChange={handleDateChange}\r\n          />\r\n        </FormControl>\r\n        <FormControl></FormControl>\r\n        <FormControl>\r\n          <InputLabel>Age {player.age}</InputLabel>\r\n          <br />\r\n          <br />\r\n          <FormHelperText id=\"my-helper-text\">\r\n            Age must be higher or equal to 18\r\n          </FormHelperText>\r\n        </FormControl>\r\n      </FormGroup>\r\n      <Button color=\"secondary\" onClick={addPlayer} variant=\"outlined\">\r\n        <InputLabel>Add New Player</InputLabel>\r\n      </Button>\r\n    </>\r\n  );\r\n}\r\n","export function calculateAge(birthday: Date) {\r\n  // birthday is a date\r\n  var ageDifMs = Date.now() - birthday.getTime();\r\n  var ageDate = new Date(ageDifMs); // miliseconds from epoch\r\n  return Math.abs(ageDate.getUTCFullYear() - 1970);\r\n}\r\n","import * as types from './actionTypes';\r\nimport { Player } from '../../helpers/interfaces';\r\n\r\nexport function createPlayerSuccess(player: Player) {\r\n  return { type: types.CREATE_PLAYER_SUCCESS, player };\r\n}\r\n","import React, { useState } from 'react';\r\nimport PlayersList from './PlayersList';\r\nimport PlayerForm from './PlayerForm';\r\nimport { Button, InputLabel } from '@material-ui/core';\r\n\r\nexport default function PlayersPage() {\r\n  const [activeForm, setActiveForm] = useState(false);\r\n  return (\r\n    <>\r\n      <Button\r\n        variant=\"outlined\"\r\n        onClick={() => {\r\n          setActiveForm(!activeForm);\r\n        }}\r\n      >\r\n        <InputLabel>Player Form</InputLabel>\r\n      </Button>\r\n      {activeForm && <PlayerForm />}\r\n      <PlayersList />\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n  ListItem,\r\n  ListItemText,\r\n  Divider,\r\n  List,\r\n  MenuItem,\r\n  Select,\r\n} from '@material-ui/core';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { format } from 'date-fns';\r\nimport { Team, Player } from '../helpers/interfaces';\r\nimport * as teamActions from '../redux/actions/teamActions';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nconst TeamList: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const teams: Team[] = useSelector((state: { teams: Team[] }) => state.teams);\r\n  const players: Player[] = useSelector(\r\n    (state: { players: Player[] }) => state.players\r\n  );\r\n  const classes = useStyles();\r\n\r\n  const handleSelectorChange = (event: any) => {\r\n    const playerToAddId = event.target.value;\r\n    const teamIdToAdd = event.target.name;\r\n    const filteredTeams = teams.filter((t) => t.id === teamIdToAdd);\r\n    const filteredPlayers = players.filter((p) => p.id === playerToAddId);\r\n    if (filteredTeams.length > 0 && filteredPlayers.length > 0) {\r\n      const newTeamPlayers = [...filteredTeams[0].players, filteredPlayers[0]];\r\n      const newTeam = {\r\n        ...filteredTeams[0],\r\n        players: newTeamPlayers,\r\n        numberOfPlayers: filteredTeams[0].numberOfPlayers + 1,\r\n      };\r\n      dispatch(teamActions.addPlayerToTeam(newTeam, filteredPlayers[0]));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      TEAMS LIST\r\n      <List>\r\n        <Divider />\r\n        {teams.map((team: Team) => {\r\n          return (\r\n            <>\r\n              <ListItem button>\r\n                <ListItemText>\r\n                  {team.name} | {team.stadium} | Number of Players:{' '}\r\n                  {team.numberOfPlayers} |{' '}\r\n                  {format(team.dateofbirth, 'MM/dd/yyyy')} |\r\n                </ListItemText>\r\n                <Select\r\n                  name={team.id}\r\n                  value={players}\r\n                  onChange={handleSelectorChange}\r\n                >\r\n                  {players.map((player: Player) => {\r\n                    const ps = team.players.filter(\r\n                      (p: Player) => p.id === player.id\r\n                    ).length;\r\n                    if (ps > 0) {\r\n                      return;\r\n                    }\r\n                    return (\r\n                      <MenuItem value={player.id}>\r\n                        {player.name} {player.lastname}\r\n                      </MenuItem>\r\n                    );\r\n                  })}\r\n                </Select>\r\n              </ListItem>\r\n              <Divider />\r\n            </>\r\n          );\r\n        })}\r\n      </List>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TeamList;\r\n","import * as types from './actionTypes';\r\nimport { Team, Player } from '../../helpers/interfaces';\r\n\r\nexport function createTeamSuccess(team: Team) {\r\n  return { type: types.CREATE_TEAM_SUCCESS, team };\r\n}\r\n\r\nexport function addPlayerToTeam(team: Team, player: Player) {\r\n  return { type: types.ADD_PLAYER_TO_TEAM, player, team };\r\n}\r\n","import React, { useState } from 'react';\r\nimport nextId from 'react-id-generator';\r\nimport * as teamActions from '../redux/actions/teamActions';\r\nimport {\r\n  FormControl,\r\n  Input,\r\n  InputLabel,\r\n  FormGroup,\r\n  Button,\r\n} from '@material-ui/core';\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Team } from '../helpers/interfaces';\r\n\r\nexport default function TeamForm() {\r\n  const dispatch = useDispatch();\r\n  const [team, setTeam] = useState({\r\n    id: '',\r\n    name: '',\r\n    stadium: '',\r\n    players: [],\r\n    dateofbirth: new Date(1891, 6, 16),\r\n    numberOfPlayers: 0,\r\n  });\r\n\r\n  const teams: Team[] = useSelector((state: { teams: Team[] }) => state.teams);\r\n\r\n  const handleChange = (event: any) => {\r\n    console.log(event.target.name);\r\n    console.log(event.target.value);\r\n    setTeam({ ...team, [event.target.name]: event.target.value });\r\n    console.log(team);\r\n  };\r\n\r\n  function handleDateChange(date: Date) {\r\n    console.log(date);\r\n    setTeam({ ...team, dateofbirth: date });\r\n    console.log(team);\r\n  }\r\n\r\n  const addTeam = () => {\r\n    const newId = nextId('test-id-');\r\n    let validTeam = true;\r\n    const newTeam = { ...team, id: newId };\r\n    teams.map((team) => {\r\n      if (team.stadium === newTeam.stadium) validTeam = false;\r\n    });\r\n    if (!validTeam) {\r\n      alert('Invalid Team, stadium name already exists');\r\n      return;\r\n    }\r\n    if (!newTeam.name) return alert('Team name is required');\r\n    if (!newTeam.stadium) return alert('Team stadium is required');\r\n    dispatch(teamActions.createTeamSuccess(newTeam));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <FormGroup>\r\n        <FormControl>\r\n          <InputLabel>Name</InputLabel>\r\n          <Input\r\n            name=\"name\"\r\n            aria-describedby=\"my-helper-text\"\r\n            onChange={handleChange}\r\n          />\r\n        </FormControl>\r\n        <FormControl>\r\n          <InputLabel>Stadium</InputLabel>\r\n          <Input\r\n            name=\"stadium\"\r\n            aria-describedby=\"my-helper-text\"\r\n            onChange={handleChange}\r\n          />\r\n        </FormControl>\r\n        <FormControl>\r\n          <InputLabel>Date of Fundation</InputLabel>\r\n          <DatePicker selected={team.dateofbirth} onChange={handleDateChange} />\r\n        </FormControl>\r\n        <br />\r\n      </FormGroup>\r\n      <Button color=\"secondary\" onClick={addTeam} variant=\"outlined\">\r\n        <InputLabel>Add New Team</InputLabel>\r\n      </Button>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport TeamsList from './TeamsList';\r\nimport TeamForm from './TeamForm';\r\nimport { Button, InputLabel } from '@material-ui/core';\r\n\r\nexport default function TeamsPage() {\r\n  const [activeForm, setActiveForm] = useState(false);\r\n  return (\r\n    <>\r\n      <Button\r\n        variant=\"outlined\"\r\n        onClick={() => {\r\n          setActiveForm(!activeForm);\r\n        }}\r\n      >\r\n        <InputLabel>Team Form</InputLabel>\r\n      </Button>\r\n      {activeForm && <TeamForm />}\r\n      <TeamsList />\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from 'react-router-dom';\nimport Nav from './components/Nav';\nimport PlayersPage from './components/PlayersPage';\nimport TeamsPage from './components/TeamsPage';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Nav />\n        <Switch>\n          <Route path=\"/players\">\n            <PlayersPage />\n          </Route>\n          <Route path=\"/teams\">\n            <TeamsPage />\n          </Route>\n          <Route path=\"*\">\n            <Redirect to=\"/players\" />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {\r\n  players: [\r\n    {\r\n      id: '1',\r\n      name: 'Jope',\r\n      lastname: 'Algorta',\r\n      age: 21,\r\n      dateofbirth: new Date(1999, 6, 16),\r\n    },\r\n    {\r\n      id: '2',\r\n      name: 'Juan',\r\n      lastname: 'Perez',\r\n      age: 22,\r\n      dateofbirth: new Date(1998, 6, 16),\r\n    },\r\n    {\r\n      id: '3',\r\n      name: 'Joaquin',\r\n      lastname: 'Fernandez',\r\n      age: 21,\r\n      dateofbirth: new Date(1999, 6, 16),\r\n    },\r\n  ],\r\n  teams: [\r\n    {\r\n      id: '1',\r\n      name: 'Manya',\r\n      stadium: 'CDS',\r\n      dateofbirth: new Date(1891, 8, 16),\r\n      players: [\r\n        {\r\n          id: '1',\r\n          name: 'Jope',\r\n          lastname: 'Algorta',\r\n          age: 21,\r\n          dateofbirth: new Date(1999, 6, 16),\r\n        },\r\n      ],\r\n      numberOfPlayers: 1,\r\n    },\r\n    {\r\n      id: '2',\r\n      name: 'Nacional',\r\n      stadium: 'GPC',\r\n      dateofbirth: new Date(1910, 8, 16),\r\n      players: [],\r\n      numberOfPlayers: 0,\r\n    },\r\n  ],\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport players from './playerReducers';\r\nimport teams from './teamReducers';\r\nconst rootReducer = combineReducers({\r\n  players,\r\n  teams,\r\n});\r\n\r\nexport default rootReducer;\r\n","import * as types from '../actions/actionTypes';\r\nimport initialState from './initialState';\r\nimport { Player } from '../../helpers/interfaces';\r\n\r\nexport default function playerReducer(\r\n  state = initialState.players,\r\n  action: { type: string; player: Player }\r\n) {\r\n  switch (action.type) {\r\n    case types.CREATE_PLAYER_SUCCESS:\r\n      return [...state, { ...action.player }];\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import * as types from '../actions/actionTypes';\r\nimport initialState from './initialState';\r\nimport { Team, Player } from '../../helpers/interfaces';\r\n\r\nexport default function teamReducer(\r\n  state = initialState.teams,\r\n  action: { type: string; team: Team; player?: Player }\r\n) {\r\n  switch (action.type) {\r\n    case types.CREATE_TEAM_SUCCESS:\r\n      return [...state, { ...action.team }];\r\n    case types.ADD_PLAYER_TO_TEAM:\r\n      return state.map((team) =>\r\n        team.id === action.team.id ? action.team : team\r\n      );\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport configureStore from './redux/configureStore';\nimport initialState from './redux/reducers/initialState';\n\nconst store = configureStore(initialState);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport rootReducer from './reducers';\r\nimport reduxImmutableStateInvariant from 'redux-immutable-state-invariant';\r\n\r\nexport default function configureStore(initialState) {\r\n  const composeEnhancers =\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose; // add support for Redux dev tools\r\n\r\n  return createStore(\r\n    rootReducer,\r\n    initialState,\r\n    composeEnhancers(applyMiddleware(reduxImmutableStateInvariant()))\r\n  );\r\n}\r\n"],"sourceRoot":""}