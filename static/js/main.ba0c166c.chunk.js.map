{"version":3,"sources":["components/Nav.tsx","components/PlayersList.tsx","components/PlayerForm.tsx","components/PlayersPage.tsx","components/TeamsList.tsx","components/TeamForm.tsx","components/TeamsPage.tsx","App.tsx","reportWebVitals.ts","redux/actions/actionTypes.ts","redux/reducers/initialState.ts","redux/reducers/index.ts","redux/reducers/playerReducers.ts","redux/reducers/teamReducers.ts","index.tsx","redux/configureStore.js"],"names":["navAddresses","label","route","Nav","AppBar","position","Toolbar","variant","ButtonGroup","color","aria-label","map","ad","Button","InputLabel","to","useStyles","makeStyles","theme","root","width","maxWidth","backgroundColor","palette","background","paper","PlayersList","useDispatch","players","useSelector","state","classes","className","List","Divider","player","ListItem","button","ListItemText","name","lastname","age","dateofbirth","PlayerForm","FormGroup","FormControl","Input","id","aria-describedby","FormHelperText","PlayersPage","useState","activeForm","setActiveForm","onClick","TeamList","teams","team","stadium","numberOfPlayers","TeamForm","TeamsPage","TeamsList","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","CREATE_PLAYER_SUCCESS","CREATE_TEAM_SUCCESS","rootReducer","combineReducers","initialState","action","type","types","store","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","reduxImmutableStateInvariant","configureStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ba0c166c.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport { Button, InputLabel } from '@material-ui/core';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\n\r\nconst navAddresses = [\r\n  { label: 'Players', route: '/players' },\r\n  { label: 'Teams', route: '/teams' },\r\n];\r\n\r\nexport default function Nav() {\r\n  return (\r\n    <>\r\n      <AppBar position=\"static\">\r\n        <Toolbar variant=\"dense\">\r\n          <ButtonGroup\r\n            color=\"secondary\"\r\n            aria-label=\"outlined primary button group\"\r\n          >\r\n            {navAddresses.map((ad) => (\r\n              <Button key={ad.label}>\r\n                <InputLabel>\r\n                  <Link to={ad.route}>{ad.label}</Link>\r\n                </InputLabel>\r\n              </Button>\r\n            ))}\r\n          </ButtonGroup>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport * as playerActions from '../redux/actions/playerActions';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\ninterface Player {\r\n  id: number;\r\n  name: string;\r\n  lastname: string;\r\n  age: number;\r\n  dateofbirth: string;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nconst PlayersList: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const players: Player[] = useSelector(\r\n    (state: { players: Player[] }) => state.players\r\n  );\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <List>\r\n        <Divider />\r\n        {players.map((player: Player) => {\r\n          return (\r\n            <>\r\n              <ListItem button>\r\n                <ListItemText>\r\n                  {player.name} {player.lastname} | {player.age} |{' '}\r\n                  {player.dateofbirth} |\r\n                </ListItemText>\r\n              </ListItem>\r\n              <Divider />\r\n            </>\r\n          );\r\n        })}\r\n      </List>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PlayersList;\r\n","import React from 'react';\r\nimport {\r\n  FormControl,\r\n  FormHelperText,\r\n  Input,\r\n  InputLabel,\r\n  FormGroup,\r\n  Button,\r\n} from '@material-ui/core';\r\n\r\nexport default function PlayerForm() {\r\n  return (\r\n    <>\r\n      <FormGroup>\r\n        <FormControl>\r\n          <InputLabel>Name</InputLabel>\r\n          <Input id=\"my-input-name\" aria-describedby=\"my-helper-text\" />\r\n        </FormControl>\r\n        <FormControl>\r\n          <InputLabel>Last Name</InputLabel>\r\n          <Input id=\"my-input-lastname\" aria-describedby=\"my-helper-text\" />\r\n        </FormControl>\r\n        <FormControl>\r\n          <InputLabel>Date of Birth</InputLabel>\r\n          <Input id=\"my-input-birth\" aria-describedby=\"my-helper-text\" />\r\n        </FormControl>\r\n        <FormControl>\r\n          <InputLabel>Age</InputLabel>\r\n          <Input id=\"my-input-age\" aria-describedby=\"my-helper-text\" />\r\n          <FormHelperText id=\"my-helper-text\">\r\n            Age must be higher or equal to 18\r\n          </FormHelperText>\r\n        </FormControl>\r\n      </FormGroup>\r\n      <Button color=\"secondary\" variant=\"outlined\">\r\n        <InputLabel>Add New Player</InputLabel>\r\n      </Button>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport PlayersList from './PlayersList';\r\nimport PlayerForm from './PlayerForm';\r\nimport { Button, InputLabel } from '@material-ui/core';\r\n\r\nexport default function PlayersPage() {\r\n  const [activeForm, setActiveForm] = useState(false);\r\n  return (\r\n    <>\r\n      <Button\r\n        variant=\"outlined\"\r\n        onClick={() => {\r\n          setActiveForm(!activeForm);\r\n        }}\r\n      >\r\n        <InputLabel>Player Form</InputLabel>\r\n      </Button>\r\n      {activeForm && <PlayerForm />}\r\n      <PlayersList />\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport * as teamActions from '../redux/actions/teamActions';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\ninterface Team {\r\n  id: number;\r\n  name: string;\r\n  stadium: string;\r\n  players: [];\r\n  dateofbirth: string;\r\n  numberOfPlayers: number;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nconst TeamList: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const teams: Team[] = useSelector((state: { teams: Team[] }) => state.teams);\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <List>\r\n        <Divider />\r\n        {teams.map((team: Team) => {\r\n          return (\r\n            <>\r\n              <ListItem button>\r\n                <ListItemText>\r\n                  {team.name} | {team.stadium} | Number of Players:{' '}\r\n                  {team.numberOfPlayers} | {team.dateofbirth} |\r\n                </ListItemText>\r\n              </ListItem>\r\n              <Divider />\r\n            </>\r\n          );\r\n        })}\r\n      </List>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TeamList;\r\n","import React from 'react';\r\nimport {\r\n  FormControl,\r\n  Input,\r\n  InputLabel,\r\n  FormGroup,\r\n  Button,\r\n} from '@material-ui/core';\r\n\r\nexport default function TeamForm() {\r\n  return (\r\n    <>\r\n      <FormGroup>\r\n        <FormControl>\r\n          <InputLabel>Name</InputLabel>\r\n          <Input id=\"my-input-name\" aria-describedby=\"my-helper-text\" />\r\n        </FormControl>\r\n        <FormControl>\r\n          <InputLabel>Stadium</InputLabel>\r\n          <Input id=\"my-input-stadium\" aria-describedby=\"my-helper-text\" />\r\n        </FormControl>\r\n        <FormControl>\r\n          <InputLabel>Date of Fundation</InputLabel>\r\n          <Input id=\"my-input-birth\" aria-describedby=\"my-helper-text\" />\r\n        </FormControl>\r\n      </FormGroup>\r\n      <Button color=\"secondary\" variant=\"outlined\">\r\n        <InputLabel>Add New Player</InputLabel>\r\n      </Button>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport TeamsList from './TeamsList';\r\nimport TeamForm from './TeamForm';\r\nimport { Button, InputLabel } from '@material-ui/core';\r\n\r\nexport default function TeamsPage() {\r\n  const [activeForm, setActiveForm] = useState(false);\r\n  return (\r\n    <>\r\n      <Button\r\n        variant=\"outlined\"\r\n        onClick={() => {\r\n          setActiveForm(!activeForm);\r\n        }}\r\n      >\r\n        <InputLabel>Team Form</InputLabel>\r\n      </Button>\r\n      {activeForm && <TeamForm />}\r\n      <TeamsList />\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from 'react-router-dom';\nimport Nav from './components/Nav';\nimport PlayersPage from './components/PlayersPage';\nimport TeamsPage from './components/TeamsPage';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Nav />\n        <Switch>\n          <Route path=\"/players\">\n            <PlayersPage />\n          </Route>\n          <Route path=\"/teams\">\n            <TeamsPage />\n          </Route>\n          <Route path=\"*\">\n            <Redirect to=\"/players\" />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const CREATE_PLAYER_SUCCESS = 'CREATE_PLAYER_SUCCESS';\r\nexport const CREATE_TEAM_SUCCESS = 'CREATE_TEAM_SUCCESS';\r\nexport const ADD_PLAYER_TO_TEAM = 'ADD_PLAYER_TO_TEAM';\r\n","// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {\r\n  players: [\r\n    {\r\n      id: 1,\r\n      name: 'Jope',\r\n      lastname: 'Algorta',\r\n      age: 21,\r\n      dateofbirth: '16 de julio del 1999',\r\n    },\r\n  ],\r\n  teams: [\r\n    {\r\n      id: 1,\r\n      name: 'Manya',\r\n      stadium: 'CDS',\r\n      dateofbirth: '16 de julio del 1999',\r\n      players: [],\r\n      numberOfPlayers: 0,\r\n    },\r\n  ],\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport players from './playerReducers';\r\nimport teams from './teamReducers';\r\nconst rootReducer = combineReducers({\r\n  players,\r\n  teams,\r\n});\r\n\r\nexport default rootReducer;\r\n","import * as types from '../actions/actionTypes';\r\nimport initialState from './initialState';\r\n\r\nexport default function playerReducer(\r\n  state = initialState.players,\r\n  action: { type: string; player: {} }\r\n) {\r\n  switch (action.type) {\r\n    case types.CREATE_PLAYER_SUCCESS:\r\n      return [...state, { ...action.player }];\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import * as types from '../actions/actionTypes';\r\nimport initialState from './initialState';\r\n\r\nexport default function teamReducer(\r\n  state = initialState.teams,\r\n  action: { type: string; team: {} }\r\n) {\r\n  switch (action.type) {\r\n    case types.CREATE_TEAM_SUCCESS:\r\n      return [...state, { ...action.team }];\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport configureStore from './redux/configureStore';\nimport initialState from './redux/reducers/initialState';\n\nconst store = configureStore(initialState);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport rootReducer from './reducers';\r\nimport reduxImmutableStateInvariant from 'redux-immutable-state-invariant';\r\n\r\nexport default function configureStore(initialState) {\r\n  const composeEnhancers =\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose; // add support for Redux dev tools\r\n\r\n  return createStore(\r\n    rootReducer,\r\n    initialState,\r\n    composeEnhancers(applyMiddleware(reduxImmutableStateInvariant()))\r\n  );\r\n}\r\n"],"sourceRoot":""}